{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",

  "parameters": {
    "rgName": {
      "type": "string",
      "metadata": {
        "description": "Name of the resourceGroup to create the resources in"
      }
    }
  },
  "variables": {
    "rgLocation": "[resourceGroup().location]"
  },
  "resources": [
                            {
                            "type": "Microsoft.Network/virtualNetworks",
                            "apiVersion": "2020-04-01",
                            "name": "[if(equals(parameters('virtualNetworkType'), 'External'), parameters('vnet').name, variables('defaultVNetName'))]",
                            "location": "[parameters('location')]",
                            "properties": {
                                "addressSpace": {
                                    "addressPrefixes": "[if(equals(parameters('virtualNetworkType'), 'External'), parameters('vnet').addressPrefixes, json(concat('[{\"', variables('defaultAddressPrefix'),'\"}]')))]"
                                },
                                "subnets": [
                                    {
                                        "name": "[if(equals(parameters('virtualNetworkType'), 'External'), parameters('vnet').subnets.subnet.name, variables('defaultSubnetName'))]",
                                        "properties": {
                                            "serviceEndpoints": [
                                                {
                                                    "service": "Microsoft.CognitiveServices",
                                                    "locations": [
                                                        "[parameters('location')]"
                                                    ]
                                                }
                                            ],
                                            "addressPrefix": "[if(equals(parameters('virtualNetworkType'), 'External'), parameters('vnet').subnets.subnet.addressPrefix, variables('defaultAddressPrefix'))]"
                                        }
                                    }
                                ]
                            }
                        },
                                {
            "type": "Microsoft.CognitiveServices/accounts",
            "apiVersion": "2022-03-01",
            "name": "[parameters('name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', 'deployVnet')]"
            ],
            "tags": "[if(contains(parameters('tagValues'), 'Microsoft.CognitiveServices/accounts'), parameters('tagValues')['Microsoft.CognitiveServices/accounts'], json('{}'))]",
            "sku": {
                "name": "[parameters('sku')]"
            },
            "kind": "OpenAI",
            "properties": {
                "customSubDomainName": "[toLower(parameters('name'))]",
                "publicNetworkAccess": "[if(equals(parameters('virtualNetworkType'), 'Internal'), 'Disabled', 'Enabled')]",
                "networkAcls": {
                    "defaultAction": "[if(equals(parameters('virtualNetworkType'), 'External'), 'Deny', 'Allow')]",
                    "virtualNetworkRules": "[if(equals(parameters('virtualNetworkType'), 'External'), json(concat('[{\"id\": \"', concat(subscription().id, '/resourceGroups/', parameters('vnet').resourceGroup, '/providers/Microsoft.Network/virtualNetworks/', parameters('vnet').name, '/subnets/', parameters('vnet').subnets.subnet.name), '\"}]')), json('[]'))]",
                    "ipRules": "[if(or(empty(parameters('ipRules')), empty(parameters('ipRules')[0].value)), json('[]'), parameters('ipRules'))]"
                }
            }
        },

  ]
}