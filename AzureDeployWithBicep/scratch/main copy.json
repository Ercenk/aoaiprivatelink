{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vaults_cust_a_kv_name": {
            "defaultValue": "cust-a-kv",
            "type": "String"
        },
        "virtualMachines_cust_a_vm_name": {
            "defaultValue": "cust-a-vm",
            "type": "String"
        },
        "privateEndpoints_kvprivep_name": {
            "defaultValue": "kvprivep",
            "type": "String"
        },
        "sshPublicKeys_cust_a_vm_key_name": {
            "defaultValue": "cust-a-vm_key",
            "type": "String"
        },
        "virtualNetworks_cust_a_vnet_name": {
            "defaultValue": "cust_a_vnet",
            "type": "String"
        },
        "networkInterfaces_cust_a_vm368_name": {
            "defaultValue": "cust-a-vm368",
            "type": "String"
        },
        "bastionHosts_cust_a_vnet_bastion_name": {
            "defaultValue": "cust_a_vnet-bastion",
            "type": "String"
        },
        "publicIPAddresses_cust_a_vnet_ip_name": {
            "defaultValue": "cust_a_vnet-ip",
            "type": "String"
        },
        "accounts_erc_cust_a_aoai_name": {
            "defaultValue": "erc-cust-a-aoai",
            "type": "String"
        },
        "networkSecurityGroups_cust_a_vm_nsg_name": {
            "defaultValue": "cust-a-vm-nsg",
            "type": "String"
        },
        "privateEndpoints_cust_a_priv_endpoint_name": {
            "defaultValue": "cust-a-priv-endpoint",
            "type": "String"
        },
        "schedules_shutdown_computevm_cust_a_vm_name": {
            "defaultValue": "shutdown-computevm-cust-a-vm",
            "type": "String"
        },
        "networkInterfaces_cust_a_priv_endpoint_nic_name": {
            "defaultValue": "cust-a-priv-endpoint-nic",
            "type": "String"
        },
        "privateDnsZones_privatelink_openai_azure_com_name": {
            "defaultValue": "privatelink.openai.azure.com",
            "type": "String"
        },
        "privateDnsZones_privatelink_vaultcore_azure_net_name": {
            "defaultValue": "privatelink.vaultcore.azure.net",
            "type": "String"
        },
        "networkSecurityGroups_cust_a_vnet_app_nsg_eastus_name": {
            "defaultValue": "cust_a_vnet-app-nsg-eastus",
            "type": "String"
        },
        "networkSecurityGroups_cust_a_vnet_privateendpoints_nsg_eastus_name": {
            "defaultValue": "cust_a_vnet-privateendpoints-nsg-eastus",
            "type": "String"
        },
        "networkSecurityGroups_cust_a_vnet_AzureBastionSubnet_nsg_eastus_name": {
            "defaultValue": "cust_a_vnet-AzureBastionSubnet-nsg-eastus",
            "type": "String"
        },
        "networkInterfaces_kvprivep_nic_d4507eb9_2620_4777_8aea_6943875f0c41_name": {
            "defaultValue": "kvprivep.nic.d4507eb9-2620-4777-8aea-6943875f0c41",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
     
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2023-02-01",
            "name": "[parameters('vaults_cust_a_kv_name')]",
            "location": "eastus",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "tenantId": "16b3c013-d300-468d-ac64-7eda0820b6d3",
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "Deny",
                    "ipRules": [],
                    "virtualNetworkRules": []
                },
                "accessPolicies": [],
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "enableRbacAuthorization": true,
                "vaultUri": "[concat('https://', parameters('vaults_cust_a_kv_name'), '.vault.azure.net/')]",
                "provisioningState": "Succeeded",
                "publicNetworkAccess": "Disabled"
            }
        },
      
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2022-11-01",
            "name": "[parameters('networkSecurityGroups_cust_a_vm_nsg_name')]",
            "location": "eastus",
            "properties": {
                "securityRules": []
            }
        },

        {
            "type": "Microsoft.KeyVault/vaults/privateEndpointConnections",
            "apiVersion": "2023-02-01",
            "name": "[concat(parameters('vaults_cust_a_kv_name'), '/kvprivep_8adf0824-956d-4c2f-b613-3ccfeb5de03b')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_cust_a_kv_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "privateEndpoint": {},
                "privateLinkServiceConnectionState": {
                    "status": "Approved",
                    "actionsRequired": "None"
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2023-02-01",
            "name": "[concat(parameters('vaults_cust_a_kv_name'), '/aoaiapikey')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_cust_a_kv_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2023-02-01",
            "name": "[concat(parameters('vaults_cust_a_kv_name'), '/aoaiendpoint')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_cust_a_kv_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
               {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2022-11-01",
            "name": "[parameters('networkInterfaces_kvprivep_nic_d4507eb9_2620_4777_8aea_6943875f0c41_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_cust_a_vnet_name'), 'privateendpoints')]"
            ],
            "kind": "Regular",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "privateEndpointIpConfig.e9b28b94-3e46-4952-932c-759408acab57",
                        "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_kvprivep_nic_d4507eb9_2620_4777_8aea_6943875f0c41_name')), '/ipConfigurations/privateEndpointIpConfig.e9b28b94-3e46-4952-932c-759408acab57')]",
                        "etag": "W/\"aaa7f69f-3771-4bd2-8278-61337c4e9ee1\"",
                        "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "privateIPAddress": "10.0.1.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_cust_a_vnet_name'), 'privateendpoints')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4",
                            "privateLinkConnectionProperties": {
                                "groupId": "vault",
                                "requiredMemberName": "default",
                                "fqdns": [
                                    "cust-a-kv.vault.azure.net"
                                ]
                            }
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "disableTcpStateTracking": false,
                "nicType": "Standard"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2022-11-01",
            "name": "[concat(parameters('networkSecurityGroups_cust_a_vnet_AzureBastionSubnet_nsg_eastus_name'), '/AllowAzureCloudOutbound')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_cust_a_vnet_AzureBastionSubnet_nsg_eastus_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "AzureCloud",
                "access": "Allow",
                "priority": 110,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2022-11-01",
            "name": "[concat(parameters('networkSecurityGroups_cust_a_vnet_app_nsg_eastus_name'), '/AllowCorpnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_cust_a_vnet_app_nsg_eastus_name'))]"
            ],
            "properties": {
                "description": "CSS Governance Security Rule.  Allow Corpnet inbound.  https://aka.ms/casg",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "CorpNetPublic",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 2700,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2022-11-01",
            "name": "[concat(parameters('networkSecurityGroups_cust_a_vnet_AzureBastionSubnet_nsg_eastus_name'), '/AllowCorpnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_cust_a_vnet_AzureBastionSubnet_nsg_eastus_name'))]"
            ],
            "properties": {
                "description": "CSS Governance Security Rule.  Allow Corpnet inbound.  https://aka.ms/casg",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "CorpNetPublic",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 2700,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2022-11-01",
            "name": "[concat(parameters('networkSecurityGroups_cust_a_vnet_privateendpoints_nsg_eastus_name'), '/AllowCorpnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_cust_a_vnet_privateendpoints_nsg_eastus_name'))]"
            ],
            "properties": {
                "description": "CSS Governance Security Rule.  Allow Corpnet inbound.  https://aka.ms/casg",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "CorpNetPublic",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 2700,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2022-11-01",
            "name": "[concat(parameters('networkSecurityGroups_cust_a_vnet_AzureBastionSubnet_nsg_eastus_name'), '/AllowGatewayManager')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_cust_a_vnet_AzureBastionSubnet_nsg_eastus_name'))]"
            ],
            "properties": {
                "description": "Allow GatewayManager",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "GatewayManager",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 2702,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2022-11-01",
            "name": "[concat(parameters('networkSecurityGroups_cust_a_vnet_AzureBastionSubnet_nsg_eastus_name'), '/AllowHttpsInBound')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_cust_a_vnet_AzureBastionSubnet_nsg_eastus_name'))]"
            ],
            "properties": {
                "description": "Allow HTTPs",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "Internet",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 2703,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2022-11-01",
            "name": "[concat(parameters('networkSecurityGroups_cust_a_vnet_app_nsg_eastus_name'), '/AllowSAW')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_cust_a_vnet_app_nsg_eastus_name'))]"
            ],
            "properties": {
                "description": "CSS Governance Security Rule.  Allow SAW inbound.  https://aka.ms/casg",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "CorpNetSaw",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 2701,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2022-11-01",
            "name": "[concat(parameters('networkSecurityGroups_cust_a_vnet_AzureBastionSubnet_nsg_eastus_name'), '/AllowSAW')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_cust_a_vnet_AzureBastionSubnet_nsg_eastus_name'))]"
            ],
            "properties": {
                "description": "CSS Governance Security Rule.  Allow SAW inbound.  https://aka.ms/casg",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "CorpNetSaw",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 2701,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2022-11-01",
            "name": "[concat(parameters('networkSecurityGroups_cust_a_vnet_privateendpoints_nsg_eastus_name'), '/AllowSAW')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_cust_a_vnet_privateendpoints_nsg_eastus_name'))]"
            ],
            "properties": {
                "description": "CSS Governance Security Rule.  Allow SAW inbound.  https://aka.ms/casg",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "CorpNetSaw",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 2701,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2022-11-01",
            "name": "[concat(parameters('networkSecurityGroups_cust_a_vnet_AzureBastionSubnet_nsg_eastus_name'), '/AllowSshRdpOutbound')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_cust_a_vnet_AzureBastionSubnet_nsg_eastus_name'))]"
            ],
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 100,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [
                    "22",
                    "3389"
                ],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_vaultcore_azure_net_name'), '/cust-a-kv')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_vaultcore_azure_net_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "aRecords": [
                    {
                        "ipv4Address": "10.0.1.4"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_openai_azure_com_name'), '/cust-a-vm')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_openai_azure_com_name'))]"
            ],
            "properties": {
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.0.0.4"
                    }
                ]
            }
        },

        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_openai_azure_com_name'), '/vm000000')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_openai_azure_com_name'))]"
            ],
            "properties": {
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.0.2.4"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_openai_azure_com_name'), '/vm000001')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_openai_azure_com_name'))]"
            ],
            "properties": {
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.0.2.5"
                    }
                ]
            }
        },

        {
            "type": "Microsoft.Network/privateDnsZones/SOA",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_vaultcore_azure_net_name'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_vaultcore_azure_net_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "soaRecord": {
                    "email": "azureprivatedns-host.microsoft.com",
                    "expireTime": 2419200,
                    "host": "azureprivatedns.net",
                    "minimumTtl": 10,
                    "refreshTime": 3600,
                    "retryTime": 300,
                    "serialNumber": 1
                }
            }
        },
        {
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "2022-11-01",
            "name": "[parameters('bastionHosts_cust_a_vnet_bastion_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_cust_a_vnet_ip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_cust_a_vnet_name'), 'AzureBastionSubnet')]"
            ],
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "dnsName": "bst-e5fef670-e651-4296-b59b-8da378adcce1.bastion.azure.com",
                "scaleUnits": 2,
                "enableTunneling": false,
                "enableIpConnect": false,
                "disableCopyPaste": false,
                "enableShareableLink": false,
                "enableKerberos": false,
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "id": "[concat(resourceId('Microsoft.Network/bastionHosts', parameters('bastionHosts_cust_a_vnet_bastion_name')), '/bastionHostIpConfigurations/IpConf')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_cust_a_vnet_ip_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_cust_a_vnet_name'), 'AzureBastionSubnet')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2022-11-01",
            "name": "[parameters('networkInterfaces_cust_a_vm368_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_cust_a_vnet_name'), 'app')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_cust_a_vm_nsg_name'))]"
            ],
            "kind": "Regular",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_cust_a_vm368_name')), '/ipConfigurations/ipconfig1')]",
                        "etag": "W/\"ab1d8d73-320b-468b-9fd9-02a62fa9dda4\"",
                        "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "privateIPAddress": "10.0.0.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_cust_a_vnet_name'), 'app')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": true,
                "enableIPForwarding": false,
                "disableTcpStateTracking": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_cust_a_vm_nsg_name'))]"
                },
                "nicType": "Standard"
            }
        },

        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_vaultcore_azure_net_name'), '/on7u2r53hps3w')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_vaultcore_azure_net_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_cust_a_vnet_name'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_cust_a_vnet_name'))]"
                }
            }
        },
    
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2022-11-01",
            "name": "[parameters('privateEndpoints_kvprivep_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_cust_a_kv_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_cust_a_vnet_name'), 'privateendpoints')]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[concat(parameters('privateEndpoints_kvprivep_name'), '_8adf0824-956d-4c2f-b613-3ccfeb5de03b')]",
                        "id": "[concat(resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoints_kvprivep_name')), concat('/privateLinkServiceConnections/', parameters('privateEndpoints_kvprivep_name'), '_8adf0824-956d-4c2f-b613-3ccfeb5de03b'))]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_cust_a_kv_name'))]",
                            "groupIds": [
                                "vault"
                            ],
                            "privateLinkServiceConnectionState": {
                                "status": "Approved",
                                "actionsRequired": "None"
                            }
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [],
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_cust_a_vnet_name'), 'privateendpoints')]"
                },
                "ipConfigurations": [],
                "customDnsConfigs": [
                    {
                        "fqdn": "cust-a-kv.vault.azure.net",
                        "ipAddresses": [
                            "10.0.1.4"
                        ]
                    }
                ]
            }
        },
  
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2022-11-01",
            "name": "[concat(parameters('virtualNetworks_cust_a_vnet_name'), '/app')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_cust_a_vnet_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_cust_a_vnet_app_nsg_eastus_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.0.0/24",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_cust_a_vnet_app_nsg_eastus_name'))]"
                },
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2022-11-01",
            "name": "[concat(parameters('virtualNetworks_cust_a_vnet_name'), '/AzureBastionSubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_cust_a_vnet_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_cust_a_vnet_AzureBastionSubnet_nsg_eastus_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.2.0/26",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_cust_a_vnet_AzureBastionSubnet_nsg_eastus_name'))]"
                },
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2022-11-01",
            "name": "[concat(parameters('virtualNetworks_cust_a_vnet_name'), '/privateendpoints')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_cust_a_vnet_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_cust_a_vnet_privateendpoints_nsg_eastus_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.1.0/24",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_cust_a_vnet_privateendpoints_nsg_eastus_name'))]"
                },
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2022-11-01",
            "name": "[parameters('virtualNetworks_cust_a_vnet_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_cust_a_vnet_app_nsg_eastus_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_cust_a_vnet_AzureBastionSubnet_nsg_eastus_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_cust_a_vnet_privateendpoints_nsg_eastus_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "dhcpOptions": {
                    "dnsServers": []
                },
                "subnets": [
                    {
                        "name": "app",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_cust_a_vnet_name'), 'app')]",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_cust_a_vnet_app_nsg_eastus_name'))]"
                            },
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "AzureBastionSubnet",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_cust_a_vnet_name'), 'AzureBastionSubnet')]",
                        "properties": {
                            "addressPrefix": "10.0.2.0/26",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_cust_a_vnet_AzureBastionSubnet_nsg_eastus_name'))]"
                            },
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "privateendpoints",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_cust_a_vnet_name'), 'privateendpoints')]",
                        "properties": {
                            "addressPrefix": "10.0.1.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_cust_a_vnet_privateendpoints_nsg_eastus_name'))]"
                            },
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false
            }
        }
    ]
}